using System.Collections;using UnityEngine;using UnityEngine.UI;using UnityEngine.SceneManagement;public class UI_Manager : MonoBehaviour{    public Text scoreText;    public float score;    private Player _player;    private Enemy _enemy;    private int _sum;    //creating a handle     //[SerializeField]    // private GameObject  _livesImage;    [SerializeField]    private Sprite[] _spriteImages;    [SerializeField]    private Image _livesImages;    [SerializeField]    public Image shieldImage;    [SerializeField]    public Image tripleShotImage;    [SerializeField]    public Image speedImage;        [SerializeField]    private bool _gameOverFlicker = false;    [SerializeField]    private Text _gameOverText;    [SerializeField]    private Text _restartLevelText;    [SerializeField]    private int _number;    public Text  ammoCount;    private int _ammo;    // Start is called before the first frame update    void Start()    {        shieldImage.gameObject.SetActive(false);        //testing        tripleShotImage.gameObject.SetActive(false);        _gameOverText.gameObject.SetActive(false);         speedImage.gameObject.SetActive(false);        _restartLevelText.gameObject.SetActive(false);        _player = GameObject.FindWithTag("player").GetComponent<Player>();        if (_player == null)        {            Debug.Log(" player is alive");        }        _enemy = GameObject.FindWithTag("enemy").GetComponent<Enemy>();        if (_enemy != null)        {            Debug.Log(" eneny is alive");        }         }    // Update is called once per frame    void Update()    {        Score();        Lives();        RestartScene();        SmallShieldActive();        TripleShotSmall();        SmallSpeedImage();                AmmoCountin();    }    private void AmmoCountin()     {        // gett the ammo count.        _ammo = _player.ammoCount;        if( ammoCount == null)         {            Debug.Log("ammocount exists");                }        ammoCount.text = " Ammo count is "+ _ammo;    }    private void Lives()    {        float _playerLives = _player._lives;        // number is int lives        _number = Mathf.RoundToInt(_playerLives);        _livesImages.sprite = _spriteImages[_number];       // Debug.Log("player lives are :" + _number);        if (_number < 1)        {            StartCoroutine(FlickerGameOver());            //  _gameOverFlicker = true;            _restartLevelText.gameObject.SetActive(true);        }    }    private void Score()    {        score = _player.score;       // Debug.Log("it works yeah :" + score);        if (scoreText != null)        {          //  Debug.Log("scoretext exists ");        }        // assigning the _score to the score Text.        scoreText.text = "score :" + score;    }    private IEnumerator FlickerGameOver()     {         while (true)        {            _gameOverText.gameObject.SetActive(true);            yield return new WaitForSeconds(.25f);            _gameOverText.gameObject.SetActive(false);            yield return new WaitForSeconds(.25f);        }    }    private void RestartScene()    {        if (Input.GetKeyDown(KeyCode.R))        {            SceneManager.LoadScene(1);        }    }    private void SmallShieldActive()    {        if (_player.isSmallShieldsActive == true)        {            shieldImage.gameObject.SetActive(true);        }        else        {            shieldImage.gameObject.SetActive(false);        }    }    private void TripleShotSmall()    {        if (_player.isTripleShotSmallActive ==true) // set a bool in player.        {            tripleShotImage.gameObject.SetActive(true);        }        else if(_player.isTripleShotSmallActive == false)         {            tripleShotImage.gameObject.SetActive(false);        }    }    private void SmallSpeedImage()     {        if (_player._isSpeedIncrease == true)        {            speedImage.gameObject.SetActive(true);        }        else if (_player._isSpeedIncrease == false)         {            speedImage.gameObject.SetActive(false);        }    }}